Makefile:40: warning: overriding commands for target `clean'
/tools/Makefile.f77-cernlib:32: warning: ignoring old commands for target `clean'
g++  -Wall -g -pedantic -D COMPLETE -D VERBOSE -D SAFE   -c subsystemcontainer.cpp	`root-config --cflags`
container.h:31: warning: 'class eco::Container' has virtual functions but non-virtual destructor
time.h:54: warning: 'class AbstractClock' has virtual functions but non-virtual destructor
time.h:69: warning: 'class Clock' has virtual functions but non-virtual destructor
existance.h:41: warning: 'class Existance' has virtual functions but non-virtual destructor
vivent.h:40: warning: 'class Vivent' has virtual functions but non-virtual destructor
specied.h:42: warning: 'class Specied' has virtual functions but non-virtual destructor
animal.h:38: warning: 'class Animal' has virtual functions but non-virtual destructor
individualanimal.h:40: warning: 'class IndividualAnimal' has virtual functions but non-virtual destructor
vegetable.h:37: warning: 'class Vegetable' has virtual functions but non-virtual destructor
individualvegetable.h:41: warning: 'class IndividualVegetable' has virtual functions but non-virtual destructor
controller.h:34: warning: 'class Controller' has virtual functions but non-virtual destructor
like.h:44: warning: 'struct Like' has virtual functions but non-virtual destructor
speciesinfo.h:90: error: expected ',' or '...' before '>' token
speciesinfo.h:54: warning: 'struct SpeciesInfo' has virtual functions but non-virtual destructor
speciesinfo.h:90: error: wrong number of template arguments (1, should be 4)
/usr/lib/gcc/i386-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/stl_map.h:92: error: provided for 'template<class _Key, class _Tp, class _Compare, class _Alloc> class std::map'
speciesinfo.h:92: error: default argument missing for parameter 9 of 'SpeciesInfo::SpeciesInfo(unsigned int, std::string, unsigned int, unsigned int, unsigned int, float, bool, std::map<unsigned int, Like, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, Like> > >, Like)'
speciescontroller.h:62: warning: 'class SpeciesController' has virtual functions but non-virtual destructor
subsystemcontainer.h:70: warning: 'class SubsystemContainer' has virtual functions but non-virtual destructor
/usr/include/boost/multi_index/mem_fun.hpp: In member function 'Type boost::multi_index::const_mem_fun<Class, Type, PtrToMemberFunction>::operator()(const ChainedPtr&) const [with ChainedPtr = IndividualAnimal, Class = Specied, Type = unsigned int, Type (Class::* PtrToMemberFunction)()const = &Specied::species_id]':
/usr/include/boost/multi_index/detail/ord_index_ops.hpp:65:   instantiated from 'Node* boost::multi_index::detail::ordered_index_find(Node*, const KeyFromValue&, const CompatibleKey&, const CompatibleCompare&) [with Node = boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::index_node_base<IndividualAnimal> >, KeyFromValue = boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, CompatibleKey = unsigned int, CompatibleCompare = std::less<unsigned int>]'
/usr/include/boost/multi_index/ordered_index.hpp:376:   instantiated from 'boost::multi_index::detail::index_iterator<boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type> > boost::multi_index::detail::ordered_index<KeyFromValue, Compare, SuperMeta, TagList, Category>::find(const CompatibleKey&) const [with CompatibleKey = unsigned int, KeyFromValue = boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, Compare = std::less<unsigned int>, SuperMeta = boost::multi_index::detail::nth_layer<4, IndividualAnimal, boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::reproduction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<IndividualAnimal> >, TagList = boost::mpl::v_item<SubsystemContainer::spec_id, boost::mpl::vector0<mpl_::na>, 0>, Category = boost::multi_index::detail::ordered_non_unique_tag]'
subsystemcontainer.cpp:140:   instantiated from here
/usr/include/boost/multi_index/mem_fun.hpp:55: error: no match for 'operator*' in '*x'
/usr/include/boost/multi_index/mem_fun.hpp: In member function 'Type boost::multi_index::const_mem_fun<Class, Type, PtrToMemberFunction>::operator()(const ChainedPtr&) const [with ChainedPtr = IndividualVegetable, Class = Specied, Type = unsigned int, Type (Class::* PtrToMemberFunction)()const = &Specied::species_id]':
/usr/include/boost/multi_index/detail/ord_index_ops.hpp:65:   instantiated from 'Node* boost::multi_index::detail::ordered_index_find(Node*, const KeyFromValue&, const CompatibleKey&, const CompatibleCompare&) [with Node = boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::index_node_base<IndividualVegetable> >, KeyFromValue = boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, CompatibleKey = unsigned int, CompatibleCompare = std::less<unsigned int>]'
/usr/include/boost/multi_index/ordered_index.hpp:376:   instantiated from 'boost::multi_index::detail::index_iterator<boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type> > boost::multi_index::detail::ordered_index<KeyFromValue, Compare, SuperMeta, TagList, Category>::find(const CompatibleKey&) const [with CompatibleKey = unsigned int, KeyFromValue = boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, Compare = std::less<unsigned int>, SuperMeta = boost::multi_index::detail::nth_layer<3, IndividualVegetable, boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<IndividualVegetable> >, TagList = boost::mpl::v_item<SubsystemContainer::spec_id, boost::mpl::vector0<mpl_::na>, 0>, Category = boost::multi_index::detail::ordered_non_unique_tag]'
subsystemcontainer.cpp:169:   instantiated from here
/usr/include/boost/multi_index/mem_fun.hpp:55: error: no match for 'operator*' in '*x'
/usr/include/boost/multi_index/mem_fun.hpp: In member function 'Type boost::multi_index::const_mem_fun<Class, Type, PtrToMemberFunction>::operator()(const ChainedPtr&) const [with ChainedPtr = IndividualAnimal, Class = Existance, Type = long unsigned int, Type (Class::* PtrToMemberFunction)()const = &Existance::id_number]':
/usr/include/boost/multi_index/detail/ord_index_ops.hpp:65:   instantiated from 'Node* boost::multi_index::detail::ordered_index_find(Node*, const KeyFromValue&, const CompatibleKey&, const CompatibleCompare&) [with Node = boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::index_node_base<IndividualAnimal> > >, KeyFromValue = boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, CompatibleKey = long unsigned int, CompatibleCompare = std::less<long unsigned int>]'
/usr/include/boost/multi_index/ordered_index.hpp:376:   instantiated from 'boost::multi_index::detail::index_iterator<boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type> > boost::multi_index::detail::ordered_index<KeyFromValue, Compare, SuperMeta, TagList, Category>::find(const CompatibleKey&) const [with CompatibleKey = long unsigned int, KeyFromValue = boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, Compare = std::less<long unsigned int>, SuperMeta = boost::multi_index::detail::nth_layer<3, IndividualAnimal, boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::reproduction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<IndividualAnimal> >, TagList = boost::mpl::v_item<SubsystemContainer::id, boost::mpl::vector0<mpl_::na>, 0>, Category = boost::multi_index::detail::ordered_unique_tag]'
subsystemcontainer.cpp:367:   instantiated from here
/usr/include/boost/multi_index/mem_fun.hpp:55: error: no match for 'operator*' in '*x'
/usr/include/boost/multi_index/mem_fun.hpp: In member function 'Type boost::multi_index::const_mem_fun<Class, Type, PtrToMemberFunction>::operator()(const ChainedPtr&) const [with ChainedPtr = IndividualVegetable, Class = Existance, Type = long unsigned int, Type (Class::* PtrToMemberFunction)()const = &Existance::id_number]':
/usr/include/boost/multi_index/detail/ord_index_ops.hpp:65:   instantiated from 'Node* boost::multi_index::detail::ordered_index_find(Node*, const KeyFromValue&, const CompatibleKey&, const CompatibleCompare&) [with Node = boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::index_node_base<IndividualVegetable> > >, KeyFromValue = boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, CompatibleKey = long unsigned int, CompatibleCompare = std::less<long unsigned int>]'
/usr/include/boost/multi_index/ordered_index.hpp:376:   instantiated from 'boost::multi_index::detail::index_iterator<boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type> > boost::multi_index::detail::ordered_index<KeyFromValue, Compare, SuperMeta, TagList, Category>::find(const CompatibleKey&) const [with CompatibleKey = long unsigned int, KeyFromValue = boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, Compare = std::less<long unsigned int>, SuperMeta = boost::multi_index::detail::nth_layer<2, IndividualVegetable, boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<IndividualVegetable> >, TagList = boost::mpl::v_item<SubsystemContainer::id, boost::mpl::vector0<mpl_::na>, 0>, Category = boost::multi_index::detail::ordered_unique_tag]'
subsystemcontainer.cpp:382:   instantiated from here
/usr/include/boost/multi_index/mem_fun.hpp:55: error: no match for 'operator*' in '*x'
/usr/include/boost/multi_index/mem_fun.hpp: In member function 'Type boost::multi_index::const_mem_fun<Class, Type, PtrToMemberFunction>::operator()(const ChainedPtr&) const [with ChainedPtr = IndividualAnimal, Class = Vivent, Type = unsigned int, Type (Class::* PtrToMemberFunction)()const = &Vivent::hp]':
/usr/include/boost/multi_index/composite_key.hpp:372:   instantiated from 'static bool boost::multi_index::detail::compare_ckey_ckey_normal<KeyCons1, Value1, KeyCons2, Value2, CompareCons>::compare(const KeyCons1&, const Value1&, const KeyCons2&, const Value2&, const CompareCons&) [with KeyCons1 = boost::tuples::cons<boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type>, Value1 = IndividualAnimal, KeyCons2 = boost::tuples::cons<boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type>, Value2 = IndividualAnimal, CompareCons = boost::tuples::cons<std::less<unsigned int>, boost::tuples::null_type>]'
/usr/include/boost/multi_index/composite_key.hpp:378:   instantiated from 'static bool boost::multi_index::detail::compare_ckey_ckey_normal<KeyCons1, Value1, KeyCons2, Value2, CompareCons>::compare(const KeyCons1&, const Value1&, const KeyCons2&, const Value2&, const CompareCons&) [with KeyCons1 = boost::tuples::tuple<boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Value1 = IndividualAnimal, KeyCons2 = boost::tuples::tuple<boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Value2 = IndividualAnimal, CompareCons = boost::tuples::tuple<std::less<unsigned int>, std::less<unsigned int>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>]'
/usr/include/boost/multi_index/composite_key.hpp:966:   instantiated from 'bool boost::multi_index::composite_key_compare<Compare0, Compare1, Compare2, Compare3, Compare4, Compare5, Compare6, Compare7, Compare8, Compare9>::operator()(const boost::multi_index::composite_key_result<CompositeKey1>&, const boost::multi_index::composite_key_result<CompositeKey2>&) const [with CompositeKey1 = boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, CompositeKey2 = boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Compare0 = std::less<unsigned int>, Compare1 = std::less<unsigned int>, Compare2 = boost::tuples::null_type, Compare3 = boost::tuples::null_type, Compare4 = boost::tuples::null_type, Compare5 = boost::tuples::null_type, Compare6 = boost::tuples::null_type, Compare7 = boost::tuples::null_type, Compare8 = boost::tuples::null_type, Compare9 = boost::tuples::null_type]'
/usr/include/boost/multi_index/ordered_index.hpp:881:   instantiated from 'boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>* boost::multi_index::detail::ordered_index<KeyFromValue, Compare, SuperMeta, TagList, Category>::link2(typename boost::call_traits<typename KeyFromValue::result_type>::param_type, boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>*, boost::multi_index::detail::ordered_non_unique_tag) [with KeyFromValue = boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Compare = std::less<boost::multi_index::composite_key_result<boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> > >, SuperMeta = boost::multi_index::detail::nth_layer<1, IndividualAnimal, boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::reproduction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<IndividualAnimal> >, TagList = boost::mpl::v_item<SubsystemContainer::eat, boost::mpl::vector0<mpl_::na>, 0>, Category = boost::multi_index::detail::ordered_non_unique_tag]'
/usr/include/boost/multi_index/ordered_index.hpp:555:   instantiated from 'boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>* boost::multi_index::detail::ordered_index<KeyFromValue, Compare, SuperMeta, TagList, Category>::insert_(typename boost::call_traits<typename boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>::value_type>::param_type, boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>*) [with KeyFromValue = boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Compare = std::less<boost::multi_index::composite_key_result<boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> > >, SuperMeta = boost::multi_index::detail::nth_layer<1, IndividualAnimal, boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::reproduction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<IndividualAnimal> >, TagList = boost::mpl::v_item<SubsystemContainer::eat, boost::mpl::vector0<mpl_::na>, 0>, Category = boost::multi_index::detail::ordered_non_unique_tag]'
/usr/include/boost/multi_index_container.hpp:437:   instantiated from 'std::pair<typename boost::multi_index::detail::multi_index_base_type<Value, IndexSpecifierList, Allocator>::type::node_type*, bool> boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>::insert_(const Value&) [with Value = IndividualAnimal, IndexSpecifierList = boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::reproduction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Allocator = std::allocator<IndividualAnimal>]'
/usr/include/boost/multi_index/detail/index_base.hpp:148:   instantiated from 'std::pair<typename boost::multi_index::detail::multi_index_node_type<Value, IndexSpecifierList, Allocator>::type*, bool> boost::multi_index::detail::index_base<Value, IndexSpecifierList, Allocator>::final_insert_(typename boost::call_traits<Value>::param_type) [with Value = IndividualAnimal, IndexSpecifierList = boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::reproduction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Allocator = std::allocator<IndividualAnimal>]'
/usr/include/boost/multi_index/ordered_index.hpp:249:   instantiated from 'std::pair<boost::multi_index::detail::index_iterator<boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type> >, bool> boost::multi_index::detail::ordered_index<KeyFromValue, Compare, SuperMeta, TagList, Category>::insert(typename boost::call_traits<typename boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>::value_type>::param_type) [with KeyFromValue = boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Compare = std::less<boost::multi_index::composite_key_result<boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> > >, SuperMeta = boost::multi_index::detail::nth_layer<1, IndividualAnimal, boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::reproduction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<IndividualAnimal> >, TagList = boost::mpl::v_item<SubsystemContainer::eat, boost::mpl::vector0<mpl_::na>, 0>, Category = boost::multi_index::detail::ordered_non_unique_tag]'
subsystemcontainer.cpp:300:   instantiated from here
/usr/include/boost/multi_index/mem_fun.hpp:55: error: no match for 'operator*' in '*x'
/usr/include/boost/multi_index/mem_fun.hpp: In member function 'Type boost::multi_index::const_mem_fun<Class, Type, PtrToMemberFunction>::operator()(const ChainedPtr&) const [with ChainedPtr = IndividualVegetable, Class = Vivent, Type = unsigned int, Type (Class::* PtrToMemberFunction)()const = &Vivent::hp]':
/usr/include/boost/multi_index/composite_key.hpp:372:   instantiated from 'static bool boost::multi_index::detail::compare_ckey_ckey_normal<KeyCons1, Value1, KeyCons2, Value2, CompareCons>::compare(const KeyCons1&, const Value1&, const KeyCons2&, const Value2&, const CompareCons&) [with KeyCons1 = boost::tuples::cons<boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type>, Value1 = IndividualVegetable, KeyCons2 = boost::tuples::cons<boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type>, Value2 = IndividualVegetable, CompareCons = boost::tuples::cons<std::less<unsigned int>, boost::tuples::null_type>]'
/usr/include/boost/multi_index/composite_key.hpp:378:   instantiated from 'static bool boost::multi_index::detail::compare_ckey_ckey_normal<KeyCons1, Value1, KeyCons2, Value2, CompareCons>::compare(const KeyCons1&, const Value1&, const KeyCons2&, const Value2&, const CompareCons&) [with KeyCons1 = boost::tuples::tuple<boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Value1 = IndividualVegetable, KeyCons2 = boost::tuples::tuple<boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Value2 = IndividualVegetable, CompareCons = boost::tuples::tuple<std::less<unsigned int>, std::less<unsigned int>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>]'
/usr/include/boost/multi_index/composite_key.hpp:966:   instantiated from 'bool boost::multi_index::composite_key_compare<Compare0, Compare1, Compare2, Compare3, Compare4, Compare5, Compare6, Compare7, Compare8, Compare9>::operator()(const boost::multi_index::composite_key_result<CompositeKey1>&, const boost::multi_index::composite_key_result<CompositeKey2>&) const [with CompositeKey1 = boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, CompositeKey2 = boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Compare0 = std::less<unsigned int>, Compare1 = std::less<unsigned int>, Compare2 = boost::tuples::null_type, Compare3 = boost::tuples::null_type, Compare4 = boost::tuples::null_type, Compare5 = boost::tuples::null_type, Compare6 = boost::tuples::null_type, Compare7 = boost::tuples::null_type, Compare8 = boost::tuples::null_type, Compare9 = boost::tuples::null_type]'
/usr/include/boost/multi_index/ordered_index.hpp:881:   instantiated from 'boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>* boost::multi_index::detail::ordered_index<KeyFromValue, Compare, SuperMeta, TagList, Category>::link2(typename boost::call_traits<typename KeyFromValue::result_type>::param_type, boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>*, boost::multi_index::detail::ordered_non_unique_tag) [with KeyFromValue = boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Compare = std::less<boost::multi_index::composite_key_result<boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> > >, SuperMeta = boost::multi_index::detail::nth_layer<1, IndividualVegetable, boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<IndividualVegetable> >, TagList = boost::mpl::v_item<SubsystemContainer::eat, boost::mpl::vector0<mpl_::na>, 0>, Category = boost::multi_index::detail::ordered_non_unique_tag]'
/usr/include/boost/multi_index/ordered_index.hpp:555:   instantiated from 'boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>* boost::multi_index::detail::ordered_index<KeyFromValue, Compare, SuperMeta, TagList, Category>::insert_(typename boost::call_traits<typename boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>::value_type>::param_type, boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>*) [with KeyFromValue = boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Compare = std::less<boost::multi_index::composite_key_result<boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> > >, SuperMeta = boost::multi_index::detail::nth_layer<1, IndividualVegetable, boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<IndividualVegetable> >, TagList = boost::mpl::v_item<SubsystemContainer::eat, boost::mpl::vector0<mpl_::na>, 0>, Category = boost::multi_index::detail::ordered_non_unique_tag]'
/usr/include/boost/multi_index_container.hpp:437:   instantiated from 'std::pair<typename boost::multi_index::detail::multi_index_base_type<Value, IndexSpecifierList, Allocator>::type::node_type*, bool> boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>::insert_(const Value&) [with Value = IndividualVegetable, IndexSpecifierList = boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Allocator = std::allocator<IndividualVegetable>]'
/usr/include/boost/multi_index/detail/index_base.hpp:148:   instantiated from 'std::pair<typename boost::multi_index::detail::multi_index_node_type<Value, IndexSpecifierList, Allocator>::type*, bool> boost::multi_index::detail::index_base<Value, IndexSpecifierList, Allocator>::final_insert_(typename boost::call_traits<Value>::param_type) [with Value = IndividualVegetable, IndexSpecifierList = boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Allocator = std::allocator<IndividualVegetable>]'
/usr/include/boost/multi_index/ordered_index.hpp:249:   instantiated from 'std::pair<boost::multi_index::detail::index_iterator<boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type> >, bool> boost::multi_index::detail::ordered_index<KeyFromValue, Compare, SuperMeta, TagList, Category>::insert(typename boost::call_traits<typename boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>::value_type>::param_type) [with KeyFromValue = boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Compare = std::less<boost::multi_index::composite_key_result<boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> > >, SuperMeta = boost::multi_index::detail::nth_layer<1, IndividualVegetable, boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualVegetable, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<IndividualVegetable> >, TagList = boost::mpl::v_item<SubsystemContainer::eat, boost::mpl::vector0<mpl_::na>, 0>, Category = boost::multi_index::detail::ordered_non_unique_tag]'
subsystemcontainer.cpp:331:   instantiated from here
/usr/include/boost/multi_index/mem_fun.hpp:55: error: no match for 'operator*' in '*x'
/usr/include/boost/multi_index/mem_fun.hpp: In member function 'Type boost::multi_index::const_mem_fun<Class, Type, PtrToMemberFunction>::operator()(const ChainedPtr&) const [with ChainedPtr = IndividualAnimal, Class = Vivent, Type = Gender, Type (Class::* PtrToMemberFunction)()const = &Vivent::gender]':
/usr/include/boost/multi_index/composite_key.hpp:372:   instantiated from 'static bool boost::multi_index::detail::compare_ckey_ckey_normal<KeyCons1, Value1, KeyCons2, Value2, CompareCons>::compare(const KeyCons1&, const Value1&, const KeyCons2&, const Value2&, const CompareCons&) [with KeyCons1 = boost::tuples::cons<boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::tuples::cons<boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type> >, Value1 = IndividualAnimal, KeyCons2 = boost::tuples::cons<boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::tuples::cons<boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type> >, Value2 = IndividualAnimal, CompareCons = boost::tuples::cons<std::less<Gender>, boost::tuples::cons<std::less<unsigned int>, boost::tuples::null_type> >]'
/usr/include/boost/multi_index/composite_key.hpp:378:   instantiated from 'static bool boost::multi_index::detail::compare_ckey_ckey_normal<KeyCons1, Value1, KeyCons2, Value2, CompareCons>::compare(const KeyCons1&, const Value1&, const KeyCons2&, const Value2&, const CompareCons&) [with KeyCons1 = boost::tuples::tuple<boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Value1 = IndividualAnimal, KeyCons2 = boost::tuples::tuple<boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Value2 = IndividualAnimal, CompareCons = boost::tuples::tuple<std::less<unsigned int>, std::less<Gender>, std::less<unsigned int>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>]'
/usr/include/boost/multi_index/composite_key.hpp:966:   instantiated from 'bool boost::multi_index::composite_key_compare<Compare0, Compare1, Compare2, Compare3, Compare4, Compare5, Compare6, Compare7, Compare8, Compare9>::operator()(const boost::multi_index::composite_key_result<CompositeKey1>&, const boost::multi_index::composite_key_result<CompositeKey2>&) const [with CompositeKey1 = boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, CompositeKey2 = boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Compare0 = std::less<unsigned int>, Compare1 = std::less<Gender>, Compare2 = std::less<unsigned int>, Compare3 = boost::tuples::null_type, Compare4 = boost::tuples::null_type, Compare5 = boost::tuples::null_type, Compare6 = boost::tuples::null_type, Compare7 = boost::tuples::null_type, Compare8 = boost::tuples::null_type, Compare9 = boost::tuples::null_type]'
/usr/include/boost/multi_index/ordered_index.hpp:881:   instantiated from 'boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>* boost::multi_index::detail::ordered_index<KeyFromValue, Compare, SuperMeta, TagList, Category>::link2(typename boost::call_traits<typename KeyFromValue::result_type>::param_type, boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>*, boost::multi_index::detail::ordered_non_unique_tag) [with KeyFromValue = boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Compare = std::less<boost::multi_index::composite_key_result<boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> > >, SuperMeta = boost::multi_index::detail::nth_layer<2, IndividualAnimal, boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::reproduction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<IndividualAnimal> >, TagList = boost::mpl::v_item<SubsystemContainer::reproduction, boost::mpl::vector0<mpl_::na>, 0>, Category = boost::multi_index::detail::ordered_non_unique_tag]'
/usr/include/boost/multi_index/ordered_index.hpp:555:   instantiated from 'boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>* boost::multi_index::detail::ordered_index<KeyFromValue, Compare, SuperMeta, TagList, Category>::insert_(typename boost::call_traits<typename boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>::value_type>::param_type, boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>*) [with KeyFromValue = boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Compare = std::less<boost::multi_index::composite_key_result<boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> > >, SuperMeta = boost::multi_index::detail::nth_layer<2, IndividualAnimal, boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::reproduction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<IndividualAnimal> >, TagList = boost::mpl::v_item<SubsystemContainer::reproduction, boost::mpl::vector0<mpl_::na>, 0>, Category = boost::multi_index::detail::ordered_non_unique_tag]'
/usr/include/boost/multi_index/ordered_index.hpp:559:   instantiated from 'boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>* boost::multi_index::detail::ordered_index<KeyFromValue, Compare, SuperMeta, TagList, Category>::insert_(typename boost::call_traits<typename boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>::value_type>::param_type, boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>*) [with KeyFromValue = boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Compare = std::less<boost::multi_index::composite_key_result<boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> > >, SuperMeta = boost::multi_index::detail::nth_layer<1, IndividualAnimal, boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::reproduction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<IndividualAnimal> >, TagList = boost::mpl::v_item<SubsystemContainer::eat, boost::mpl::vector0<mpl_::na>, 0>, Category = boost::multi_index::detail::ordered_non_unique_tag]'
/usr/include/boost/multi_index_container.hpp:437:   instantiated from 'std::pair<typename boost::multi_index::detail::multi_index_base_type<Value, IndexSpecifierList, Allocator>::type::node_type*, bool> boost::multi_index::multi_index_container<Value, IndexSpecifierList, Allocator>::insert_(const Value&) [with Value = IndividualAnimal, IndexSpecifierList = boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::reproduction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Allocator = std::allocator<IndividualAnimal>]'
/usr/include/boost/multi_index/detail/index_base.hpp:148:   instantiated from 'std::pair<typename boost::multi_index::detail::multi_index_node_type<Value, IndexSpecifierList, Allocator>::type*, bool> boost::multi_index::detail::index_base<Value, IndexSpecifierList, Allocator>::final_insert_(typename boost::call_traits<Value>::param_type) [with Value = IndividualAnimal, IndexSpecifierList = boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::reproduction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, Allocator = std::allocator<IndividualAnimal>]'
/usr/include/boost/multi_index/ordered_index.hpp:249:   instantiated from 'std::pair<boost::multi_index::detail::index_iterator<boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type> >, bool> boost::multi_index::detail::ordered_index<KeyFromValue, Compare, SuperMeta, TagList, Category>::insert(typename boost::call_traits<typename boost::multi_index::detail::ordered_index_node<typename SuperMeta::type::node_type>::value_type>::param_type) [with KeyFromValue = boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, Compare = std::less<boost::multi_index::composite_key_result<boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> > >, SuperMeta = boost::multi_index::detail::nth_layer<1, IndividualAnimal, boost::multi_index::indexed_by<boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::eat, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::reproduction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::composite_key<IndividualAnimal, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, boost::multi_index::const_mem_fun<Vivent, Gender, &Vivent::gender>, boost::multi_index::const_mem_fun<Vivent, unsigned int, &Vivent::hp>, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<SubsystemContainer::id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Existance, long unsigned int, &Existance::id_number>, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<SubsystemContainer::spec_id, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<Specied, unsigned int, &Specied::species_id>, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<IndividualAnimal> >, TagList = boost::mpl::v_item<SubsystemContainer::eat, boost::mpl::vector0<mpl_::na>, 0>, Category = boost::multi_index::detail::ordered_non_unique_tag]'
subsystemcontainer.cpp:300:   instantiated from here
/usr/include/boost/multi_index/mem_fun.hpp:55: error: no match for 'operator*' in '*x'
make: *** [subsystemcontainer.o] Error 1
